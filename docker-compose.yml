version: "3.3"
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    container_name: web-online-platform
    volumes:
      - .:/code
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - backend

  db:
    image: postgres:16-alpine
    container_name: db-postgres-platform
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

# redis:
# image: redis:7
# ports:
# - "6379:6379"
# networks:
# - backend

# celery:
# build: .
# command: celery -A config worker -l info
# volumes:
# - .:/code
# env_file:
# - ./.env
# depends_on:
# - db
# - redis
# - web
# networks:
# - backend
volumes:
  postgres_data:

networks:
  backend:
    driver: bridge