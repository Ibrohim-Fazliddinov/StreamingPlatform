# Generated by Django 5.1 on 2024-09-03 10:21

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('username', models.CharField(max_length=285, unique=True, verbose_name='Ваш юзернейм')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Ваш email')),
                ('telephone', models.CharField(max_length=255, unique=True, verbose_name='Номер телефона')),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('is_admin', models.BooleanField(default=False, verbose_name='Администратор')),
                ('is_content_maker', models.BooleanField(default=False, verbose_name='КонтентМейкер')),
                ('is_moderator', models.BooleanField(default=False, verbose_name='Модератор')),
                ('is_developer', models.BooleanField(default=False, verbose_name='Разработчик')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
